{"version":3,"sources":["webpack:///webpack/bootstrap e4cf0a67308374a284f2","webpack:///./lib/balancedBinaryTree.js","webpack:///./lib/root.js"],"names":[],"mappings":";AAAA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;;;AAGA;AACA;;AAEA;AACA;;AAEA;AACA,mDAA2C,cAAc;;AAEzD;AACA;AACA;AACA;AACA;AACA;AACA;AACA,aAAK;AACL;AACA;;AAEA;AACA;AACA;AACA,mCAA2B,0BAA0B,EAAE;AACvD,yCAAiC,eAAe;AAChD;AACA;AACA;;AAEA;AACA,8DAAsD,+DAA+D;;AAErH;AACA;;AAEA;AACA;;;;;;;;AChEA;AACA;;AAEA;AACA,mBAAmB;AACnB;AACA;;AAEA,QAAQ;AACR;;;AAGA;AACA;;AAEA;AACA;;AAEA,QAAQ;AACR;;;AAGA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,MAAM;AACN;AACA;AACA;AACA;AACA,MAAM;AACN;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA,kBAAkB;;AAElB;AACA;AACA;;AAEA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA,OAAO;AACP;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;;AAEA;;AAEA;;;;;;;;;ACzIA;AAAA;AACA;;AAEA,QAAQ,UAAU;AAClB;;AAEA;AACA;;AAEA,QAAQ,WAAW;AACnB;;AAEA,WAAW,eAAe;;AAE1B;;AAEA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA","file":"./bundle.js","sourcesContent":[" \t// The module cache\n \tvar installedModules = {};\n\n \t// The require function\n \tfunction __webpack_require__(moduleId) {\n\n \t\t// Check if module is in cache\n \t\tif(installedModules[moduleId])\n \t\t\treturn installedModules[moduleId].exports;\n\n \t\t// Create a new module (and put it into the cache)\n \t\tvar module = installedModules[moduleId] = {\n \t\t\ti: moduleId,\n \t\t\tl: false,\n \t\t\texports: {}\n \t\t};\n\n \t\t// Execute the module function\n \t\tmodules[moduleId].call(module.exports, module, module.exports, __webpack_require__);\n\n \t\t// Flag the module as loaded\n \t\tmodule.l = true;\n\n \t\t// Return the exports of the module\n \t\treturn module.exports;\n \t}\n\n\n \t// expose the modules object (__webpack_modules__)\n \t__webpack_require__.m = modules;\n\n \t// expose the module cache\n \t__webpack_require__.c = installedModules;\n\n \t// identity function for calling harmony imports with the correct context\n \t__webpack_require__.i = function(value) { return value; };\n\n \t// define getter function for harmony exports\n \t__webpack_require__.d = function(exports, name, getter) {\n \t\tif(!__webpack_require__.o(exports, name)) {\n \t\t\tObject.defineProperty(exports, name, {\n \t\t\t\tconfigurable: false,\n \t\t\t\tenumerable: true,\n \t\t\t\tget: getter\n \t\t\t});\n \t\t}\n \t};\n\n \t// getDefaultExport function for compatibility with non-harmony modules\n \t__webpack_require__.n = function(module) {\n \t\tvar getter = module && module.__esModule ?\n \t\t\tfunction getDefault() { return module['default']; } :\n \t\t\tfunction getModuleExports() { return module; };\n \t\t__webpack_require__.d(getter, 'a', getter);\n \t\treturn getter;\n \t};\n\n \t// Object.prototype.hasOwnProperty.call\n \t__webpack_require__.o = function(object, property) { return Object.prototype.hasOwnProperty.call(object, property); };\n\n \t// __webpack_public_path__\n \t__webpack_require__.p = \"\";\n\n \t// Load entry module and return exports\n \treturn __webpack_require__(__webpack_require__.s = 1);\n\n\n\n// WEBPACK FOOTER //\n// webpack/bootstrap e4cf0a67308374a284f2","/*********\nExport an object that contains multiple functions\n\nconst scratch = {\n  fn1: function(){},\n  fn2: function(){}\n};\n\nexport { scratch };\n**********/\n\n\n/*********\nExport multiple functions all at once\n\nconst fn1 = function(){};\nconst fn2 = function(){};\n\nexport { fn1, fn2 };\n**********/\n\n\n/*********\nExport functions as you write them\n\nexport const fn1 = function(){};\nexport const fn2 = function(){};\n**********/\n\nconst Tree = function (value) {\n  this.value = value;\n  this.right = null;\n  this.left = null;\n};\n\nTree.prototype.insertRight = function(value) {\n  let newNode = new Tree (value);\n  this.right = newNode;\n  return newNode;\n};\n\nTree.prototype.insertLeft = function(value) {\n  let newNode = new Tree (value);\n  this.left = newNode;\n  return newNode;\n};\n\n// Tree.prototype.balancedBinaryTree = function(){\n//   // Store the leaf depth for all leaves\n//   let leafDepths = [];\n//\n//   // Traverse tree while counting levels and push the level to leafDepths once a leaf is reached\n//   const traverseTreeAndStoreLeafDepth = (node, level) => {\n//     // if the node has no children, then...\n//     if (!node.left && !node.right) {\n//       // push the level to leafDepths\n//       leafDepths.push(level);\n//     }\n//\n//     // if the node has a left child, then...\n//     if (node.left) {\n//       // traverse (this.left, level + 1)\n//       traverseTreeAndStoreLeafDepth(node.left, level + 1);\n//     }\n//\n//     // if the node has a right child, then...\n//     if (node.right) {\n//       // traverse (this.right, level + 1)\n//       traverseTreeAndStoreLeafDepth(node.right, level + 1);\n//     }\n//   };\n//\n//   traverseTreeAndStoreLeafDepth(this, 1);\n//   // Sort the leaf depths\n//   leafDepths = leafDepths.sort((a, b) => {\n//     return a - b;\n//   });\n//   // If the difference between the min and the max is greater than 1, then\n//   if (leafDepths[leafDepths.length - 1] -  leafDepths[0] > 1) {\n//     // return false\n//     return false;\n//   } else {\n//     // return true\n//     return true;\n//   }\n// };\n\nTree.prototype.balancedBinaryTree = function(treeRoot) {\n  // a tree with no nodes is superbalanced, since there are no leaves!\n  if (!treeRoot) {\n      return true;\n  }\n\n  var depths = []; // we short-circuit as soon as we find more than 2\n\n  // nodes will store pairs of a node and the node's depth\n  var nodes = [];\n  nodes.push([treeRoot, 0]);\n\n  while (nodes.length) {\n\n      // pop a node and its depth from the top of our stack\n      var nodePair = nodes.pop();\n      var node  = nodePair[0],\n          depth = nodePair[1];\n\n      // case: we found a leaf\n      if (!node.left && !node.right) {\n\n          // we only care if it's a new depth\n          if (depths.indexOf(depth) < 0) {\n              depths.push(depth);\n\n              // two ways we might now have an unbalanced tree:\n              //   1) more than 2 different leaf depths\n              //   2) 2 leaf depths that are more than 1 apart\n              if ((depths.length > 2) ||\n                      (depths.length === 2 && Math.abs(depths[0] - depths[1]) > 1)) {\n                  return false;\n              }\n          }\n\n      // case: this isn't a leaf - keep stepping down\n      } else {\n          if (node.left) {\n              nodes.push([node.left, depth + 1]);\n          }\n          if (node.right) {\n              nodes.push([node.right, depth + 1]);\n          }\n      }\n  }\n\n  return true;\n\n};\n\nexport default Tree;\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./lib/balancedBinaryTree.js\n// module id = 0\n// module chunks = 0","/*********\nimport a single object from a file\n\nimport { scratch } from './scratch';\n*********/\n\n/*********\nimport a multiple objects from a file via object destructuring\n\nimport { fn1, fn2 } from './scratch';\n*********/\n\n// import { binarySearch } from './scratch';\n\nimport Tree from './balancedBinaryTree';\n\n/*********\nSet global window so we can manipulate in the browser\n\nwindow.scratch = scratch;\n*********/\n\nlet root = new Tree(6);\nlet branch1 = root.insertLeft(3);\nlet branch2 = root.insertRight(9);\nlet branch3 = branch1.insertLeft(2);\nlet branch4 = branch1.insertRight(5);\nlet branch5 = branch2.insertLeft(8);\nlet branch6 = branch2.insertRight(10);\nlet branch7 = branch3.insertLeft(1);\nlet branch8 = branch4.insertLeft(4);\nlet branch9 = branch5.insertLeft(7);\nlet branch10 = branch6.insertLeft(11);\n\nwindow.root = root;\nwindow.Tree = Tree;\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./lib/root.js\n// module id = 1\n// module chunks = 0"],"sourceRoot":""}