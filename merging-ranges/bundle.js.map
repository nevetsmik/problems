{"version":3,"sources":["webpack:///webpack/bootstrap 6f83e052ac19d807a38f","webpack:///./lib/mergingRanges.js","webpack:///./lib/root.js"],"names":[],"mappings":";AAAA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;;;AAGA;AACA;;AAEA;AACA;;AAEA;AACA,mDAA2C,cAAc;;AAEzD;AACA;AACA;AACA;AACA;AACA;AACA;AACA,aAAK;AACL;AACA;;AAEA;AACA;AACA;AACA,mCAA2B,0BAA0B,EAAE;AACvD,yCAAiC,eAAe;AAChD;AACA;AACA;;AAEA;AACA,8DAAsD,+DAA+D;;AAErH;AACA;;AAEA;AACA;;;;;;;;AChEA;AACA;;AAEA;AACA,mBAAmB;AACnB;AACA;;AAEA,QAAQ;AACR;;AAEA;AACA;;AAEA;AACA;;AAEA,QAAQ;AACR;;AAEA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA,oBAAoB,kBAAkB;AACtC;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,YAAY;AACZ;AACA;AACA;AACA;AACA;AACA;AACA,QAAQ;AACR;AACA;AACA;AACA;AACA;AACA,oBAAoB,4DAA4D;AAChF,MAAM;AACN;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;;AAEA,iBAAiB,wBAAwB;AACzC;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,KAAK;AACL;AACA;AACA;;AAEA;AACA;AAAA;AAAA;;;;;;;;;AC1FA;AAAA;AACA;;AAEA,QAAQ,UAAU;AAClB;;AAEA;AACA;;AAEA,QAAQ,WAAW;AACnB;;AAEA,WAAW,eAAe;;AAEF;;AAExB;AACA;;AAEA;AACA;;AAEA;AACA,MAAM,4BAA4B;AAClC,MAAM,2BAA2B;AACjC,MAAM,2BAA2B;AACjC,MAAM,2BAA2B;AACjC;AACA;AACA,GAAG,2BAA2B;AAC9B,GAAG,2BAA2B;AAC9B,GAAG,2BAA2B;AAC9B,GAAG,6BAA6B;AAChC,GAAG,4BAA4B;AAC/B;AACA,oBAAoB,2BAA2B,GAAG,2BAA2B;AAC7E","file":"./bundle.js","sourcesContent":[" \t// The module cache\n \tvar installedModules = {};\n\n \t// The require function\n \tfunction __webpack_require__(moduleId) {\n\n \t\t// Check if module is in cache\n \t\tif(installedModules[moduleId])\n \t\t\treturn installedModules[moduleId].exports;\n\n \t\t// Create a new module (and put it into the cache)\n \t\tvar module = installedModules[moduleId] = {\n \t\t\ti: moduleId,\n \t\t\tl: false,\n \t\t\texports: {}\n \t\t};\n\n \t\t// Execute the module function\n \t\tmodules[moduleId].call(module.exports, module, module.exports, __webpack_require__);\n\n \t\t// Flag the module as loaded\n \t\tmodule.l = true;\n\n \t\t// Return the exports of the module\n \t\treturn module.exports;\n \t}\n\n\n \t// expose the modules object (__webpack_modules__)\n \t__webpack_require__.m = modules;\n\n \t// expose the module cache\n \t__webpack_require__.c = installedModules;\n\n \t// identity function for calling harmony imports with the correct context\n \t__webpack_require__.i = function(value) { return value; };\n\n \t// define getter function for harmony exports\n \t__webpack_require__.d = function(exports, name, getter) {\n \t\tif(!__webpack_require__.o(exports, name)) {\n \t\t\tObject.defineProperty(exports, name, {\n \t\t\t\tconfigurable: false,\n \t\t\t\tenumerable: true,\n \t\t\t\tget: getter\n \t\t\t});\n \t\t}\n \t};\n\n \t// getDefaultExport function for compatibility with non-harmony modules\n \t__webpack_require__.n = function(module) {\n \t\tvar getter = module && module.__esModule ?\n \t\t\tfunction getDefault() { return module['default']; } :\n \t\t\tfunction getModuleExports() { return module; };\n \t\t__webpack_require__.d(getter, 'a', getter);\n \t\treturn getter;\n \t};\n\n \t// Object.prototype.hasOwnProperty.call\n \t__webpack_require__.o = function(object, property) { return Object.prototype.hasOwnProperty.call(object, property); };\n\n \t// __webpack_public_path__\n \t__webpack_require__.p = \"\";\n\n \t// Load entry module and return exports\n \treturn __webpack_require__(__webpack_require__.s = 1);\n\n\n\n// WEBPACK FOOTER //\n// webpack/bootstrap 6f83e052ac19d807a38f","/*********\nExport an object that contains multiple functions\n\nconst scratch = {\n  fn1: function(){},\n  fn2: function(){}\n};\n\nexport { scratch };\n**********/\n\n/*********\nExport multiple functions all at once\n\nconst fn1 = function(){};\nconst fn2 = function(){};\n\nexport { fn1, fn2 };\n**********/\n\n/*********\nExport functions as you write them\n\nexport const fn1 = function(){};\nexport const fn2 = function(){};\n**********/\n\n// export const mergingRanges = (array) => {\n//   let result = [];\n//   let slots = {};\n//   slots[array[0].startTime] = array[0].endTime;\n//\n//   for (let i = 1; i < array.length; i++) {\n//     let [startTime, endTime] = [array[i].startTime, array[i].endTime];\n//     let foundASlot = false;\n//     Object.keys(slots).forEach((key) => {\n//       if ((startTime >= parseInt(key) && startTime <= parseInt(slots[key])) || endTime >= parseInt(key) && endTime <= parseInt(slots[key])) {\n//         foundASlot = true;\n//         if (startTime >= parseInt(key) && startTime <= parseInt(slots[key])) {\n//           if (endTime > parseInt(slots[key])) {\n//             slots[key] = endTime;\n//           }\n//         } else if (endTime >= parseInt(key) && endTime <= parseInt(slots[key])) {\n//           foundASlot = true;\n//           let savedEndTime = slots[key];\n//           delete slots[key];\n//           slots[startTime] = savedEndTime;\n//         }\n//       }\n//     });\n//     if (!foundASlot) {\n//       slots[startTime] = endTime;\n//     }\n//   }\n//   Object.keys(slots).forEach((key) => {\n//     result.push({'startTime': parseInt(key), 'endTime': parseInt(slots[key])});\n//   });\n//   return JSON.stringify(result);\n// };\n\n/*\n2 cases to consider when updated endTime for a range:\n1. When the preceding endTime is greater than the current startTime\n2. When the preceding endTime is greater than the current endTime\n*/\nexport const mergingRanges = ranges => {\n  let sortedTimes = ranges.sort((a, b) => a.startTime > b.startTime);\n\n  let mergedTimes = [];\n  mergedTimes[0] = sortedTimes[0];\n\n  for (let i = 0; i < sortedTimes.length; i++) {\n    let currentRange = sortedTimes[i];\n    let lastMergedTime = mergedTimes[mergedTimes.length - 1];\n\n    // Update the endTime for the last merged range if the endTime for the last\n    // merged range is greater than the startTime for the currentRange\n    if (lastMergedTime.endTime > currentRange.startTime) {\n      // Update the endTime for the last merged range to the greater of the currentRange\n      // and the last merged time\n      lastMergedTime.endTime = Math.max(\n        lastMergedTime.endTime,\n        currentRange.endTime\n      );\n    } else {\n      mergedTimes.push(currentRange);\n    }\n  }\n\n  return mergedTimes;\n};\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./lib/mergingRanges.js\n// module id = 0\n// module chunks = 0","/*********\nimport a single object from a file\n\nimport { scratch } from './scratch';\n*********/\n\n/*********\nimport a multiple objects from a file via object destructuring\n\nimport { fn1, fn2 } from './scratch';\n*********/\n\n// import { binarySearch } from './scratch';\n\nimport { mergingRanges } from \"./mergingRanges\";\n\n/*********\nSet global window so we can manipulate in the browser\n\nwindow.scratch = scratch;\n*********/\n\n// window.hiCal = [\n//   { startTime: 1, endTime: 10 },\n//   { startTime: 2, endTime: 6 },\n//   { startTime: 3, endTime: 5 },\n//   { startTime: 7, endTime: 9 },\n// // ];\nwindow.hiCal = [\n  { startTime: 0, endTime: 1 },\n  { startTime: 3, endTime: 5 },\n  { startTime: 4, endTime: 8 },\n  { startTime: 10, endTime: 12 },\n  { startTime: 9, endTime: 10 },\n];\n// window.hiCal = [{ startTime: 1, endTime: 5 }, { startTime: 2, endTime: 3 }];\nwindow.mergingRanges = mergingRanges;\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./lib/root.js\n// module id = 1\n// module chunks = 0"],"sourceRoot":""}