{"version":3,"sources":["webpack:///webpack/bootstrap 56c30d90084d7a653db8","webpack:///./lib/leastDisruptiveSubrange.js","webpack:///./lib/root.js"],"names":[],"mappings":";AAAA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;;;AAGA;AACA;;AAEA;AACA;;AAEA;AACA,mDAA2C,cAAc;;AAEzD;AACA;AACA;AACA;AACA;AACA;AACA;AACA,aAAK;AACL;AACA;;AAEA;AACA;AACA;AACA,mCAA2B,0BAA0B,EAAE;AACvD,yCAAiC,eAAe;AAChD;AACA;AACA;;AAEA;AACA,8DAAsD,+DAA+D;;AAErH;AACA;;AAEA;AACA;;;;;;;;AChEA;AACA;;AAEA;AACA,mBAAmB;AACnB;AACA;;AAEA,QAAQ;AACR;;;AAGA;AACA;;AAEA;AACA;;AAEA,QAAQ;AACR;;;AAGA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;;AAGA;AACA,iBAAiB,2CAA2C;AAC5D;AACA,mBAAmB,wBAAwB;AAC3C;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAAA;AAAA;;;;;;;;;AC1DA;AAAA;AACA;;AAEA,QAAQ,UAAU;AAClB;;AAEA;AACA;;AAEA,QAAQ,WAAW;AACnB;;AAEA,WAAW,eAAe;;AAEQ;;AAElC;AACA;;AAEA;AACA;;AAEA;AACA;AACA","file":"./bundle.js","sourcesContent":[" \t// The module cache\n \tvar installedModules = {};\n\n \t// The require function\n \tfunction __webpack_require__(moduleId) {\n\n \t\t// Check if module is in cache\n \t\tif(installedModules[moduleId])\n \t\t\treturn installedModules[moduleId].exports;\n\n \t\t// Create a new module (and put it into the cache)\n \t\tvar module = installedModules[moduleId] = {\n \t\t\ti: moduleId,\n \t\t\tl: false,\n \t\t\texports: {}\n \t\t};\n\n \t\t// Execute the module function\n \t\tmodules[moduleId].call(module.exports, module, module.exports, __webpack_require__);\n\n \t\t// Flag the module as loaded\n \t\tmodule.l = true;\n\n \t\t// Return the exports of the module\n \t\treturn module.exports;\n \t}\n\n\n \t// expose the modules object (__webpack_modules__)\n \t__webpack_require__.m = modules;\n\n \t// expose the module cache\n \t__webpack_require__.c = installedModules;\n\n \t// identity function for calling harmony imports with the correct context\n \t__webpack_require__.i = function(value) { return value; };\n\n \t// define getter function for harmony exports\n \t__webpack_require__.d = function(exports, name, getter) {\n \t\tif(!__webpack_require__.o(exports, name)) {\n \t\t\tObject.defineProperty(exports, name, {\n \t\t\t\tconfigurable: false,\n \t\t\t\tenumerable: true,\n \t\t\t\tget: getter\n \t\t\t});\n \t\t}\n \t};\n\n \t// getDefaultExport function for compatibility with non-harmony modules\n \t__webpack_require__.n = function(module) {\n \t\tvar getter = module && module.__esModule ?\n \t\t\tfunction getDefault() { return module['default']; } :\n \t\t\tfunction getModuleExports() { return module; };\n \t\t__webpack_require__.d(getter, 'a', getter);\n \t\treturn getter;\n \t};\n\n \t// Object.prototype.hasOwnProperty.call\n \t__webpack_require__.o = function(object, property) { return Object.prototype.hasOwnProperty.call(object, property); };\n\n \t// __webpack_public_path__\n \t__webpack_require__.p = \"\";\n\n \t// Load entry module and return exports\n \treturn __webpack_require__(__webpack_require__.s = 1);\n\n\n\n// WEBPACK FOOTER //\n// webpack/bootstrap 56c30d90084d7a653db8","/*********\nExport an object that contains multiple functions\n\nconst scratch = {\n  fn1: function(){},\n  fn2: function(){}\n};\n\nexport { scratch };\n**********/\n\n\n/*********\nExport multiple functions all at once\n\nconst fn1 = function(){};\nconst fn2 = function(){};\n\nexport { fn1, fn2 };\n**********/\n\n\n/*********\nExport functions as you write them\n\nexport const fn1 = function(){};\nexport const fn2 = function(){};\n**********/\n\n//                0  1  2  3  4\n// original =    [1, 2, 3, 4, 5]\n// replacement = [3, 5, 3]\n// stop iteration at <= length - replacement.length\n\nexport const leastDisruptiveSubrange = (original, replacement) => {\n  let sumDifference = 0;\n  let minSumDifference = null;\n  let minSumDifferenceIndex = null;\n\n\n  // Iterate through the original array stopping at replacement.length\n  for (let i = 0; i <= original.length - replacement.length; i++) {\n    // Iterate from the current index for the length of the replacement array\n    for (let j = 0; j < replacement.length; j++) {\n      // Sum the differences between the replacement value and original value\n      sumDifference += Math.abs(replacement[j] - original[i + j]);\n    }\n    // If the difference summation is less than the existing difference summation\n    if (minSumDifference === null || sumDifference < minSumDifference) {\n      // then swap\n      minSumDifference = sumDifference;\n      // update position of beginning index\n      minSumDifferenceIndex = i;\n    }\n    sumDifference = 0;\n  }\n  // return beginning index\n  return minSumDifferenceIndex;\n};\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./lib/leastDisruptiveSubrange.js\n// module id = 0\n// module chunks = 0","/*********\nimport a single object from a file\n\nimport { scratch } from './scratch';\n*********/\n\n/*********\nimport a multiple objects from a file via object destructuring\n\nimport { fn1, fn2 } from './scratch';\n*********/\n\n// import { binarySearch } from './scratch';\n\nimport { leastDisruptiveSubrange } from './leastDisruptiveSubrange';\n\n/*********\nSet global window so we can manipulate in the browser\n\nwindow.scratch = scratch;\n*********/\n\nwindow.original = [2,5,9,1,-3,10,-3,39];\nwindow.replacement = [10,-3,39];\nwindow.leastDisruptiveSubrange = leastDisruptiveSubrange;\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./lib/root.js\n// module id = 1\n// module chunks = 0"],"sourceRoot":""}