{"version":3,"sources":["webpack:///webpack/bootstrap 4791b2f3c186f4cd50bb","webpack:///./lib/commonAncestor.js","webpack:///./lib/root.js"],"names":[],"mappings":";AAAA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;;;AAGA;AACA;;AAEA;AACA;;AAEA;AACA,mDAA2C,cAAc;;AAEzD;AACA;AACA;AACA;AACA;AACA;AACA;AACA,aAAK;AACL;AACA;;AAEA;AACA;AACA;AACA,mCAA2B,0BAA0B,EAAE;AACvD,yCAAiC,eAAe;AAChD;AACA;AACA;;AAEA;AACA,8DAAsD,+DAA+D;;AAErH;AACA;;AAEA;AACA;;;;;;;;AChEA;AACA;;AAEA;AACA,mBAAmB;AACnB;AACA;;AAEA,QAAQ;AACR;;;AAGA;AACA;;AAEA;AACA;;AAEA,QAAQ;AACR;;;AAGA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA,oBAAoB,sBAAsB;AAC1C;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AAAA;AAAA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA,eAAe,aAAa;AAC5B;;AAEA;AACA;AACA,gBAAgB,aAAa;AAC7B;;AAEA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA,KAAK;AACL;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;;;;;;;;;;ACtPA;AACA;;AAEA,QAAQ,UAAU;AAClB;;AAEA;AACA;;AAEA,QAAQ,WAAW;AACnB;;AAEA,WAAW,eAAe;;AAE1B;AACiB;;AAEjB;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA","file":"./bundle.js","sourcesContent":[" \t// The module cache\n \tvar installedModules = {};\n\n \t// The require function\n \tfunction __webpack_require__(moduleId) {\n\n \t\t// Check if module is in cache\n \t\tif(installedModules[moduleId])\n \t\t\treturn installedModules[moduleId].exports;\n\n \t\t// Create a new module (and put it into the cache)\n \t\tvar module = installedModules[moduleId] = {\n \t\t\ti: moduleId,\n \t\t\tl: false,\n \t\t\texports: {}\n \t\t};\n\n \t\t// Execute the module function\n \t\tmodules[moduleId].call(module.exports, module, module.exports, __webpack_require__);\n\n \t\t// Flag the module as loaded\n \t\tmodule.l = true;\n\n \t\t// Return the exports of the module\n \t\treturn module.exports;\n \t}\n\n\n \t// expose the modules object (__webpack_modules__)\n \t__webpack_require__.m = modules;\n\n \t// expose the module cache\n \t__webpack_require__.c = installedModules;\n\n \t// identity function for calling harmony imports with the correct context\n \t__webpack_require__.i = function(value) { return value; };\n\n \t// define getter function for harmony exports\n \t__webpack_require__.d = function(exports, name, getter) {\n \t\tif(!__webpack_require__.o(exports, name)) {\n \t\t\tObject.defineProperty(exports, name, {\n \t\t\t\tconfigurable: false,\n \t\t\t\tenumerable: true,\n \t\t\t\tget: getter\n \t\t\t});\n \t\t}\n \t};\n\n \t// getDefaultExport function for compatibility with non-harmony modules\n \t__webpack_require__.n = function(module) {\n \t\tvar getter = module && module.__esModule ?\n \t\t\tfunction getDefault() { return module['default']; } :\n \t\t\tfunction getModuleExports() { return module; };\n \t\t__webpack_require__.d(getter, 'a', getter);\n \t\treturn getter;\n \t};\n\n \t// Object.prototype.hasOwnProperty.call\n \t__webpack_require__.o = function(object, property) { return Object.prototype.hasOwnProperty.call(object, property); };\n\n \t// __webpack_public_path__\n \t__webpack_require__.p = \"\";\n\n \t// Load entry module and return exports\n \treturn __webpack_require__(__webpack_require__.s = 1);\n\n\n\n// WEBPACK FOOTER //\n// webpack/bootstrap 4791b2f3c186f4cd50bb","/*********\nExport an object that contains multiple functions\n\nconst scratch = {\n  fn1: function(){},\n  fn2: function(){}\n};\n\nexport { scratch };\n**********/\n\n\n/*********\nExport multiple functions all at once\n\nconst fn1 = function(){};\nconst fn2 = function(){};\n\nexport { fn1, fn2 };\n**********/\n\n\n/*********\nExport functions as you write them\n\nexport const fn1 = function(){};\nexport const fn2 = function(){};\n**********/\n\nconst Tree = function (value) {\n  this.value = value;\n  this.right = null;\n  this.left = null;\n};\n\nTree.prototype.insertRight = function (value) {\n  let newNode = new Tree(value);\n  this.right = newNode;\n  return newNode;\n};\n\nTree.prototype.insertLeft = function (value) {\n  let newNode = new Tree(value);\n  this.left = newNode;\n  return newNode;\n};\n\nTree.prototype.commonAncestor = function (node1, node2) {\n  if (!this.exists(node1) || !this.exists(node2)) {\n    return null;\n  }\n\n  const findAncestor = function (root) {\n    if (root === null || root === node1 || root === node2) {\n      return root;\n    }\n\n    let node1IsOnLeft = root.left.exists(node1);\n    let node2IsOnLeft = root.left.exists(node2);\n\n    if (node1IsOnLeft !== node2IsOnLeft) {\n      return root;\n    }\n\n    let pickASide = node1IsOnLeft ? root.left : root.right;\n    return findAncestor(pickASide);\n  };\n\n  return findAncestor(this);\n};\n\n// Tree.prototype.commonAncestor = function (node1, node2) {\n//   // Get ancestor path for node1 - ancestor1\n//   let ancestor1 = this.getAncestorPath(node1);\n//   // Get ancestor path for node2 - ancestor2\n//   let ancestor2 = this.getAncestorPath(node2);\n//   // Iterate thru ancestor1 and do indexOf on the other array\n//   for (let i = 0; i < ancestor1.length; i++) {\n//     let ancestor = ancestor1[i];\n//     let found = ancestor2.indexOf(ancestor);\n//     if (found) {\n//       return ancestor;\n//     }\n//   }\n//   return null;\n// };\n\n// Tree.prototype.getAncestorPath = function (node) {\n//   let ancestorPath = [];\n//\n//   const traverseTreeDF = (tree) => {\n//     // Traverse tree until this === node, return found = true, ancestorPath\n//     // Base case:\n//     // if this === node, then...\n//     if (tree === node) {\n//       // return true\n//       return true;\n//     }\n//\n//     // if node has a left child, then...\n//     if (tree.left) {\n//       // found = this.left.getAncestorPath(node)\n//       let found = traverseTreeDF(tree.left);\n//       // if found, then...\n//       if (found) {\n//         // ancestorPath.push(this);\n//         ancestorPath.push(tree);\n//         return true;\n//       }\n//     }\n//\n//     // if node has a right child, then...\n//     if (tree.right) {\n//       // found = this.right.getAncestorPath(node)\n//       let found = traverseTreeDF(tree.right);\n//       // if found, then...\n//       if (found) {\n//         // ancestorPath.push(this)\n//         ancestorPath.push(tree);\n//         return true;\n//       }\n//     }\n//\n//     return false;\n//   };\n//\n//   traverseTreeDF(this);\n//   return ancestorPath;\n// };\n\nTree.prototype.getAncestorPath = function (node, ancestorPath = []) {\n    // Traverse tree until this === node, return found = true, ancestorPath\n    // Base case:\n    // if this === node, then...\n    if (this === node) {\n      return ancestorPath;\n    }\n\n    if (this.left) {\n      let found = this.left.getAncestorPath(node, ancestorPath);\n      // if found, then...\n      if (found) {\n        // ancestorPath.push(this);\n        ancestorPath.push(this);\n        return ancestorPath;\n      }\n    }\n\n    // if node has a right child, then...\n    if (this.right) {\n      // found = this.right.getAncestorPath(node)\n      let found = this.right.getAncestorPath(node, ancestorPath);\n      // if found, then...\n      if (found) {\n        // ancestorPath.push(this)\n        ancestorPath.push(this);\n        return ancestorPath;\n      }\n    }\n  return null;\n};\n\nTree.prototype.exists = function (target) {\n  let right, left;\n  if (this === target) {\n    return true;\n  }\n\n  if (this.left) {\n    left = this.left.exists(target);\n  }\n\n  if (this.right) {\n    right = this.right.exists(target);\n  }\n\n  if (left || right) {\n    return true;\n  }\n\n  return false;\n};\n\n// Tree.prototype.exists = function (node, target) {\n//   if (node === target) {\n//     return true;\n//   }\n//\n//   if (node === null) {\n//     return false;\n//   }\n//\n//   return this.exists(node.left, target) || this.exists(node.right, target);\n// };\n\nexport const covers = (root, target) => {\n  if (root === target) {\n    return true;\n  }\n\n  if (root === null) {\n    return false;\n  }\n\n  return covers(root.left, target) || covers(root.right, target);\n};\n\nTree.prototype.DFSearch = function (value) {\n  if (this.value === value) {\n    return true;\n  }\n\n  if (this.left) {\n    let left = this.left.DFSearch(value);\n    if (left) { return true; }\n  }\n\n  if (this.right) {\n    let right = this.right.DFSearch(value);\n    if (right) { return true; }\n  }\n\n  return false;\n};\n\nTree.prototype.BFSearch = function (value) {\n  let queue = [];\n  queue[0] = this;\n\n  while (queue.length > 0) {\n    let current = queue.shift();\n    if (current.value === value) {\n      return true;\n    } else {\n      if (current.left) {\n        queue.push(current.left);\n      }\n      if (current.right) {\n        queue.push(current.right);\n      }\n    }\n  }\n\n  return false;\n};\n\nexport default Tree;\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./lib/commonAncestor.js\n// module id = 0\n// module chunks = 0","/*********\nimport a single object from a file\n\nimport { scratch } from './scratch';\n*********/\n\n/*********\nimport a multiple objects from a file via object destructuring\n\nimport { fn1, fn2 } from './scratch';\n*********/\n\n// import { binarySearch } from './scratch';\n\nimport Tree from './commonAncestor';\nimport { covers } from './commonAncestor';\n\n/*********\nSet global window so we can manipulate in the browser\n\nwindow.scratch = scratch;\n*********/\n\nlet root = new Tree(6);\nlet branch1 = root.insertLeft(3);\nlet branch2 = root.insertRight(9);\nlet branch3 = branch1.insertLeft(2);\nlet branch4 = branch1.insertRight(5);\nlet branch5 = branch2.insertLeft(8);\nlet branch6 = branch2.insertRight(10);\nlet branch7 = branch3.insertLeft(1);\nlet branch8 = branch4.insertLeft(4);\nlet branch9 = branch5.insertLeft(7);\nlet branch10 = branch6.insertLeft(11);\nlet branch11 = new Tree(12);\n\nwindow.root = root;\nwindow.branch1 = branch1;\nwindow.branch2 = branch2;\nwindow.branch3 = branch3;\nwindow.branch4 = branch4;\nwindow.branch5 = branch5;\nwindow.branch6 = branch6;\nwindow.branch7 = branch7;\nwindow.branch8 = branch8;\nwindow.branch9 = branch9;\nwindow.branch10 = branch10;\nwindow.branch11 = branch11;\nwindow.Tree = Tree;\nwindow.covers = covers;\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./lib/root.js\n// module id = 1\n// module chunks = 0"],"sourceRoot":""}