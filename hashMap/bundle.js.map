{"version":3,"sources":["webpack:///webpack/bootstrap 11a6b39282d409d03963","webpack:///./lib/hashMap.js","webpack:///./lib/root.js","webpack:///./lib/hashTableResizing.js"],"names":[],"mappings":";AAAA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;;;AAGA;AACA;;AAEA;AACA;;AAEA;AACA,mDAA2C,cAAc;;AAEzD;AACA;AACA;AACA;AACA;AACA;AACA;AACA,aAAK;AACL;AACA;;AAEA;AACA;AACA;AACA,mCAA2B,0BAA0B,EAAE;AACvD,yCAAiC,eAAe;AAChD;AACA;AACA;;AAEA;AACA,8DAAsD,+DAA+D;;AAErH;AACA;;AAEA;AACA;;;;;;;;AChEA;AACA;;AAEA;AACA,mBAAmB;AACnB;AACA;;AAEA,QAAQ;AACR;;;AAGA;AACA;;AAEA;AACA;;AAEA,QAAQ;AACR;;;AAGA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,iBAAiB,iCAAiC;AAClD;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,GAAG;AACH;AACA,mBAAmB,iCAAiC;AACpD;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA,GAAG;AACH;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,GAAG;AACH;AACA,mBAAmB,iCAAiC;AACpD;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,GAAG;AACH;AACA;AACA;AACA;;AAEA;AACA,iBAAiB,uBAAuB;AACxC;AACA;AACA,qBAAqB,0BAA0B;AAC/C;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA,iBAAiB,gBAAgB;AACjC;AACA;AACA;AACA;AACA;AACA;;AAEA;;;;;;;;;;AChKA;AAAA;AACA;;AAEA,QAAQ,UAAU;AAClB;;AAEA;AACA;;AAEA,QAAQ,WAAW;AACnB;;AAEA,WAAW,eAAe;;AAE1B;AACwB;;AAExB;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;;;;;;;;ACpCA;AACA;AACA,iBAAiB,gBAAgB;AACjC;AACA,uBAAuB;AACvB;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA,KAAK;AACL;AACA;;AAEA;AACA;AACA;AACA,mBAAmB,uBAAuB;AAC1C,wCAAwC,UAAU;AAClD,qBAAqB,0BAA0B;AAC/C;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA,qBAAqB,4BAA4B;AACjD;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA,KAAK;;AAEL;AACA;AACA;AACA;AACA;AACA;AACA,qBAAqB,iBAAiB;AACtC;AACA;AACA;AACA;AACA;AACA,KAAK;;AAEL;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA,qBAAqB,iBAAiB;AACtC;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA,OAAO;AACP;AACA;AACA;AACA;;AAEA;AACA;AAAA;AAAA","file":"./bundle.js","sourcesContent":[" \t// The module cache\n \tvar installedModules = {};\n\n \t// The require function\n \tfunction __webpack_require__(moduleId) {\n\n \t\t// Check if module is in cache\n \t\tif(installedModules[moduleId])\n \t\t\treturn installedModules[moduleId].exports;\n\n \t\t// Create a new module (and put it into the cache)\n \t\tvar module = installedModules[moduleId] = {\n \t\t\ti: moduleId,\n \t\t\tl: false,\n \t\t\texports: {}\n \t\t};\n\n \t\t// Execute the module function\n \t\tmodules[moduleId].call(module.exports, module, module.exports, __webpack_require__);\n\n \t\t// Flag the module as loaded\n \t\tmodule.l = true;\n\n \t\t// Return the exports of the module\n \t\treturn module.exports;\n \t}\n\n\n \t// expose the modules object (__webpack_modules__)\n \t__webpack_require__.m = modules;\n\n \t// expose the module cache\n \t__webpack_require__.c = installedModules;\n\n \t// identity function for calling harmony imports with the correct context\n \t__webpack_require__.i = function(value) { return value; };\n\n \t// define getter function for harmony exports\n \t__webpack_require__.d = function(exports, name, getter) {\n \t\tif(!__webpack_require__.o(exports, name)) {\n \t\t\tObject.defineProperty(exports, name, {\n \t\t\t\tconfigurable: false,\n \t\t\t\tenumerable: true,\n \t\t\t\tget: getter\n \t\t\t});\n \t\t}\n \t};\n\n \t// getDefaultExport function for compatibility with non-harmony modules\n \t__webpack_require__.n = function(module) {\n \t\tvar getter = module && module.__esModule ?\n \t\t\tfunction getDefault() { return module['default']; } :\n \t\t\tfunction getModuleExports() { return module; };\n \t\t__webpack_require__.d(getter, 'a', getter);\n \t\treturn getter;\n \t};\n\n \t// Object.prototype.hasOwnProperty.call\n \t__webpack_require__.o = function(object, property) { return Object.prototype.hasOwnProperty.call(object, property); };\n\n \t// __webpack_public_path__\n \t__webpack_require__.p = \"\";\n\n \t// Load entry module and return exports\n \treturn __webpack_require__(__webpack_require__.s = 1);\n\n\n\n// WEBPACK FOOTER //\n// webpack/bootstrap 11a6b39282d409d03963","/*********\nExport an object that contains multiple functions\n\nconst scratch = {\n  fn1: function(){},\n  fn2: function(){}\n};\n\nexport { scratch };\n**********/\n\n\n/*********\nExport multiple functions all at once\n\nconst fn1 = function(){};\nconst fn2 = function(){};\n\nexport { fn1, fn2 };\n**********/\n\n\n/*********\nExport functions as you write them\n\nexport const fn1 = function(){};\nexport const fn2 = function(){};\n**********/\n\nconst HashMap = function (limit) {\n  // Create instance variable array for storage\n  this.storage = [];\n  this.limit = limit;\n  // Create instance variable for counting number of elements\n  this.size = 0;\n  // Create upper limit ratio\n  this.upperLimit = .75;\n  // Create lower limit ratio\n  this.lowerLimit = .25;\n};\n\nHashMap.prototype.insert = function (key, value) {\n  // Get bucket using hashing function\n  let bucket = this.hashing(key.toString());\n  // Get the array or initialize the bucket to an array\n  this.storage[bucket] = this.storage[bucket] || [];\n  // Push the key value pair to the bucket\n  let found = false;\n  for (let i = 0; i < this.storage[bucket].length; i++) {\n    if (this.storage[bucket][i][0] === key) {\n      this.storage[bucket][i][1] = value;\n      found = true;\n    }\n  }\n  if (!found) {\n    this.storage[bucket].push([key, value]);\n    // Increment size counter\n    this.size += 1;\n  }\n  // if the size is greater than the upper limit ratio\n  if (this.size > this.limit * this.upperLimit) {\n    // resize('up')\n    this.resize('up');\n  }\n};\n\nHashMap.prototype.remove = function (key) {\n  // Get the bucket\n  let bucket = this.hashing(key.toString());\n  let value;\n  // If the bucket is null\n  if (this.storage[bucket] === undefined) {\n    // return null\n    return null;\n  } else {\n    // Iterate through the array\n    for (let i = 0; i < this.storage[bucket].length; i++) {\n      // Compare the key in the tuple to the input key\n      if (key === this.storage[bucket][i][0]) {\n        // save the value\n        value = this.storage[bucket][i][1];\n        // remove the key\n        this.storage[bucket].splice(i, 1);\n        this.size -= 1;\n      }\n    }\n  }\n\n  // if the size is less than the lower limit ration\n  if (this.size < this.lowerLimit * this.limit) {\n    // resize('down')\n    this.resize('down');\n  }\n\n  // return null\n  if (value) {\n    return value;\n  } else {\n    return null;\n  }\n};\n\nHashMap.prototype.retrieve = function (key) {\n  // Get the bucket\n  let bucket = this.hashing(key.toString());\n  // If the bucket is null\n  if (this.storage[bucket] === undefined) {\n    // return null\n    return null;\n  } else {\n    // Iterate through the array\n    for (let i = 0; i < this.storage[bucket].length; i++) {\n      // Compare the key in the tuple to the input key\n      if (this.storage[bucket][i][0] === key) {\n        // return the value\n        return this.storage[bucket][i][1];\n      }\n    }\n    // return null\n    return null;\n  }\n};\n\nHashMap.prototype.resize = function (direction) {\n  // Save the old storage\n  let oldStorage = this.storage.slice();\n  // Create a new storage\n  this.storage = [];\n  if (direction === 'up') {\n    // Reset the limit to double the size\n    this.limit = this.limit * 2;\n    this.size = 0;\n  } else {\n    // Reset the limit to half the size\n    this.limit = Math.floor(this.limit / 2);\n    this.size = 0;\n  }\n\n  // Iterate through the old storage array\n  for (let i = 0; i < oldStorage.length; i++) {\n    // Iterate through each bucket\n    if (Array.isArray(oldStorage[i])) {\n      for (let j = 0; j < oldStorage[i].length; j++) {\n        // Insert into the this\n        this.insert(oldStorage[i][j][0], oldStorage[i][j][1]);\n      }\n    }\n  }\n};\n\nHashMap.prototype.hashing = function (str) {\n  let hash = 0;\n  for (let i = 0; i < str.length; i++) {\n    hash = (hash << 5) + hash + str.charCodeAt(i);\n    hash = hash & hash;\n    hash = Math.abs(hash);\n  }\n  return hash % this.limit;\n};\n\nexport default HashMap;\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./lib/hashMap.js\n// module id = 0\n// module chunks = 0","/*********\nimport a single object from a file\n\nimport { scratch } from './scratch';\n*********/\n\n/*********\nimport a multiple objects from a file via object destructuring\n\nimport { fn1, fn2 } from './scratch';\n*********/\n\n// import { binarySearch } from './scratch';\n\nimport HashMap from './hashMap';\nimport { makeHashTable } from './hashTableResizing';\n\n/*********\nSet global window so we can manipulate in the browser\n\nwindow.scratch = scratch;\n*********/\n\n// let hash = new HashMap(5);\n// hash.insert(1, 'steve');\n// hash.insert(2, 'kim');\n// hash.insert(3, 'mary');\n// hash.insert(4, 'hauser');\nwindow.HashMap = HashMap;\nwindow.makeHashTable = makeHashTable;\n\nlet hash = new makeHashTable(5);\nhash.insert(1, 'steve');\nhash.insert(2, 'kim');\nhash.insert(3, 'mary');\n// hash.insert(4, 'hauser');\nwindow.hash = hash;\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./lib/root.js\n// module id = 1\n// module chunks = 0","var getIndexBelowMaxForKey = function(str, max) {\n  var hash = 0;\n  for (var i = 0; i < str.length; i++) {\n    hash = (hash << 5) + hash + str.charCodeAt(i);\n    hash = hash & hash; // Convert to 32bit integer\n    hash = Math.abs(hash);\n  }\n  return hash % max;\n};\n\nexport const makeHashTable = function(limit) {\n  let maxSize = limit;\n  let size = 0;\n  let storage = [];\n\n  const resize = function (direction) {\n    if (direction === 'up') {\n      maxSize = maxSize * 2;\n    } else {\n      maxSize = Math.floor(maxSize / 2);\n    }\n\n    let oldStorage = storage.slice();\n    storage = [];\n    size = 0;\n    for (let i = 0; i < oldStorage.length; i++) {\n      if (oldStorage[i] === undefined) { continue; }\n      for (let j = 0; j < oldStorage[i].length; j++) {\n        hash.insert(oldStorage[i][j][0], oldStorage[i][j][1]);\n        size += 1;\n      }\n    }\n    return hash;\n  };\n\n  let hash = {\n    insert: function (key, value) {\n      let bucket = getIndexBelowMaxForKey(key, maxSize);\n      storage[bucket] = storage[bucket] || [];\n      let found = false;\n      for (let i = 0; i < storage[bucket].length; i++) {\n        if (storage[bucket][i][0] === key) {\n          found = true;\n          storage[bucket][i][1] = value;\n        }\n      }\n      if (!found) {\n        storage[bucket].push([key, value]);\n        size += 1;\n      }\n\n      if (size > 0.75 * maxSize) {\n        resize('up');\n      }\n    },\n\n    retrieve: function (key) {\n      let bucket = getIndexBelowMaxForKey(key, maxSize);\n      if (storage[bucket] === undefined) {\n        return null;\n      }\n      let list = storage[bucket];\n      for (let i = 0; i < list.length; i++) {\n        if (list[i][0] === key) {\n          return list[i][1];\n        }\n      }\n      return null;\n    },\n\n    remove: function (key) {\n      let bucket = getIndexBelowMaxForKey(key, maxSize);\n      if (storage[bucket] === undefined) {\n        return null;\n      }\n\n      let value;\n      let list = storage[bucket];\n      for (let i = 0; i < list.length; i++) {\n        if (list[i][0] === key) {\n          value = list[i][1];\n          list.splice(i, 1);\n          size -= 1;\n        }\n      }\n\n      if (size < 0.25 * maxSize) {\n        resize('down');\n      }\n\n      if (value) {\n        return value;\n      } else {\n        return null;\n      }\n    }\n  };\n\n  return hash;\n};\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./lib/hashTableResizing.js\n// module id = 2\n// module chunks = 0"],"sourceRoot":""}