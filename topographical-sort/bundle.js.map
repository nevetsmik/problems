{"version":3,"sources":["webpack:///webpack/bootstrap 2eba5c4b40361a77b626","webpack:///./lib/topologicalSort.js","webpack:///./lib/root.js"],"names":[],"mappings":";AAAA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;;;AAGA;AACA;;AAEA;AACA;;AAEA;AACA,mDAA2C,cAAc;;AAEzD;AACA;AACA;AACA;AACA;AACA;AACA;AACA,aAAK;AACL;AACA;;AAEA;AACA;AACA;AACA,mCAA2B,0BAA0B,EAAE;AACvD,yCAAiC,eAAe;AAChD;AACA;AACA;;AAEA;AACA,8DAAsD,+DAA+D;;AAErH;AACA;;AAEA;AACA;;;;;;;;AChEA;AACA;;AAEA;AACA,mBAAmB;AACnB;AACA;;AAEA,QAAQ;AACR;;AAEA;AACA;;AAEA;AACA;;AAEA,QAAQ;AACR;;AAEA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA,iBAAiB,kBAAkB;AACnC;AACA;AACA,mBAAmB,qBAAqB;AACxC;AACA;AACA;AACA;;AAEA;AACA;AACA,iBAAiB,kBAAkB;AACnC;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA,mBAAmB,0BAA0B;AAC7C;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA,GAAG;AACH;AACA;AACA;AAAA;AAAA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA,iBAAiB,kBAAkB;AACnC;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;AAAA;AAAA;;AAEA;AACA;AACA;;AAEA;AACA,iBAAiB,0BAA0B;AAC3C;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA,gCAAgC,QAAQ;AACxC;AACA;AACA;AACA;AACA;;AAEA;;;;;;;;;;ACxJA;AACA;;AAEA,QAAQ,UAAU;AAClB;;AAEA;AACA;;AAEA,QAAQ,WAAW;AACnB;;AAEA,WAAW,eAAe;;AAE1B;AAC+C;;AAE/C;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA","file":"./bundle.js","sourcesContent":[" \t// The module cache\n \tvar installedModules = {};\n\n \t// The require function\n \tfunction __webpack_require__(moduleId) {\n\n \t\t// Check if module is in cache\n \t\tif(installedModules[moduleId])\n \t\t\treturn installedModules[moduleId].exports;\n\n \t\t// Create a new module (and put it into the cache)\n \t\tvar module = installedModules[moduleId] = {\n \t\t\ti: moduleId,\n \t\t\tl: false,\n \t\t\texports: {}\n \t\t};\n\n \t\t// Execute the module function\n \t\tmodules[moduleId].call(module.exports, module, module.exports, __webpack_require__);\n\n \t\t// Flag the module as loaded\n \t\tmodule.l = true;\n\n \t\t// Return the exports of the module\n \t\treturn module.exports;\n \t}\n\n\n \t// expose the modules object (__webpack_modules__)\n \t__webpack_require__.m = modules;\n\n \t// expose the module cache\n \t__webpack_require__.c = installedModules;\n\n \t// identity function for calling harmony imports with the correct context\n \t__webpack_require__.i = function(value) { return value; };\n\n \t// define getter function for harmony exports\n \t__webpack_require__.d = function(exports, name, getter) {\n \t\tif(!__webpack_require__.o(exports, name)) {\n \t\t\tObject.defineProperty(exports, name, {\n \t\t\t\tconfigurable: false,\n \t\t\t\tenumerable: true,\n \t\t\t\tget: getter\n \t\t\t});\n \t\t}\n \t};\n\n \t// getDefaultExport function for compatibility with non-harmony modules\n \t__webpack_require__.n = function(module) {\n \t\tvar getter = module && module.__esModule ?\n \t\t\tfunction getDefault() { return module['default']; } :\n \t\t\tfunction getModuleExports() { return module; };\n \t\t__webpack_require__.d(getter, 'a', getter);\n \t\treturn getter;\n \t};\n\n \t// Object.prototype.hasOwnProperty.call\n \t__webpack_require__.o = function(object, property) { return Object.prototype.hasOwnProperty.call(object, property); };\n\n \t// __webpack_public_path__\n \t__webpack_require__.p = \"\";\n\n \t// Load entry module and return exports\n \treturn __webpack_require__(__webpack_require__.s = 1);\n\n\n\n// WEBPACK FOOTER //\n// webpack/bootstrap 2eba5c4b40361a77b626","/*********\nExport an object that contains multiple functions\n\nconst scratch = {\n  fn1: function(){},\n  fn2: function(){}\n};\n\nexport { scratch };\n**********/\n\n/*********\nExport multiple functions all at once\n\nconst fn1 = function(){};\nconst fn2 = function(){};\n\nexport { fn1, fn2 };\n**********/\n\n/*********\nExport functions as you write them\n\nexport const fn1 = function(){};\nexport const fn2 = function(){};\n**********/\n\n/*\n  Topological Sort:\n  Sort vertices (nodes) in direct acyclic graph (DAG) in linear order such that\n  for every directed edge uv from vertex u to vertex v, u comes before v in the\n  ordering.\n\n  Example:\n  A    B\n   \\ / |\n    C  E\n   /  /\n  D  /\n   \\/\n   F\n   |\n   G\n\n  B E F G C D A is one example answer (DF)\n  A C D F G B E is another (DF)\n  A B C D E F G is another (BF)\n*/\n\nconst Node = function(value) {\n  this.value = value;\n  this.children = [];\n  this.inBound = 0;\n};\n\nNode.prototype.addChildren = function(...values) {\n  this.children = this.children.concat(values);\n};\n\nexport const topologicalSortBF = graph => {\n  // 1. Count the incoming nodes for each node\n  for (let i = 0; i < graph.length; i++) {\n    let vertex = graph[i];\n    // Iterate thru the edges of each node and increment inDegree for each edge\n    for (let j = 0; j < vertex.children; j++) {\n      let childNode = vertex.children[i];\n      childNode.inBound += 1;\n    }\n  }\n\n  // 2. Add nodes with inDegree === 0 to the inDegree queue\n  let inDegree = [];\n  for (let i = 0; i < graph.length; i++) {\n    let vertex = graph[i];\n    if (vertex.inBound === 0) {\n      inDegree.push(vertex);\n    }\n  }\n\n  // 3. Iterate through inDegree...\n  let sorted = [];\n  while (inDegree.length > 0) {\n    let node = inDegree.shift();\n    sorted.push(node);\n    for (let i = 0; i < node.children.length; i++) {\n      node.inDegree -= 1;\n      if (node.inDegree === 0) {\n        inDegree.push(node);\n      }\n    }\n  }\n\n  if (graph.length !== sorted.length) {\n    return [];\n  } else {\n    return printStack(sorted).reverse();\n  }\n};\n\nexport const topologicalSortDF = graph => {\n  // Create a stack to put all the nodes in sorted order\n  // Create an object to remember all nodes that have already been visited\n  let stack = [];\n  let visited = {};\n\n  // Iterate through the the nodes in the graph\n  for (let i = 0; i < graph.length; i++) {\n    // Skip over the ones that have already been visited\n    let node = graph[i];\n    if (visited.hasOwnProperty(node.value)) {\n      continue;\n    }\n\n    // Call the topologicalSortHelper on each node\n    topologicalSortHelperDF(node, visited, stack);\n  }\n\n  // Pop off elements off the stack in reverse order to get sorted nodes\n  let answer = printStack(stack);\n  console.log(answer);\n};\n\nconst topologicalSortHelperDF = (node, visited, stack) => {\n  // Add the visited node to visited\n  visited[node.value] = true;\n\n  // Iterate through each of the nodes children\n  for (let i = 0; i < node.children.length; i++) {\n    // Skip over the ones that have been visited\n    let childNode = node.children[i];\n    if (visited[childNode.value]) {\n      continue;\n    }\n\n    // Recurse on the child node\n    topologicalSortHelperDF(childNode, visited, stack);\n  }\n\n  // If there are no children or after all the children have been visited, then\n  // push the node to the stack\n  stack.push(node);\n};\n\nconst printStack = stack => {\n  let result = [];\n  for (let i = stack.length - 1; i >= 0; i--) {\n    let node = stack[i];\n    result.push(node.value);\n  }\n  return result;\n};\n\nexport default Node;\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./lib/topologicalSort.js\n// module id = 0\n// module chunks = 0","/*********\nimport a single object from a file\n\nimport { scratch } from './scratch';\n*********/\n\n/*********\nimport a multiple objects from a file via object destructuring\n\nimport { fn1, fn2 } from './scratch';\n*********/\n\n// import { binarySearch } from './scratch';\n\nimport Node from \"./topologicalSort\";\nimport { topologicalSortDF, topologicalSortBF } from \"./topologicalSort\";\n\n/*********\nSet global window so we can manipulate in the browser\n\nwindow.scratch = scratch;\n*********/\n\nconst a = new Node(\"A\");\nconst c = new Node(\"C\");\nconst d = new Node(\"D\");\nconst f = new Node(\"F\");\nconst g = new Node(\"G\");\nconst b = new Node(\"B\");\nconst e = new Node(\"E\");\na.addChildren(c);\nc.addChildren(d);\nd.addChildren(f);\nf.addChildren(g);\nb.addChildren(c, e);\ne.addChildren(f);\n\nwindow.Node = Node;\nwindow.graph = [a, b, c, d, e, f, g];\nwindow.topologicalSortDF = topologicalSortDF;\nwindow.topologicalSortBF = topologicalSortBF;\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./lib/root.js\n// module id = 1\n// module chunks = 0"],"sourceRoot":""}