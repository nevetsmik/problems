{"version":3,"sources":["webpack:///webpack/bootstrap cf27e352617326df50fa","webpack:///./lib/numberOfIslands.js","webpack:///./lib/root.js"],"names":[],"mappings":";AAAA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;;;AAGA;AACA;;AAEA;AACA;;AAEA;AACA,mDAA2C,cAAc;;AAEzD;AACA;AACA;AACA;AACA;AACA;AACA;AACA,aAAK;AACL;AACA;;AAEA;AACA;AACA;AACA,mCAA2B,0BAA0B,EAAE;AACvD,yCAAiC,eAAe;AAChD;AACA;AACA;;AAEA;AACA,8DAAsD,+DAA+D;;AAErH;AACA;;AAEA;AACA;;;;;;;;AChEA;AACA;;AAEA;AACA,mBAAmB;AACnB;AACA;;AAEA,QAAQ;AACR;;AAEA;AACA;;AAEA;AACA;;AAEA,QAAQ;AACR;;AAEA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA,mBAAmB,oBAAoB;AACvC;AACA,qBAAqB,uBAAuB;AAC5C;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAAA;AAAA;;AAEA;AACA;AACA;AACA;AACA,mBAAmB,oBAAoB;AACvC;AACA,qBAAqB,uBAAuB;AAC5C;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAAA;AAAA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,KAAK;AACL;AACA,GAAG;AACH;AACA;AACA;AAAA;AAAA;;AAEA;AACA;AACA;;AAEA;;AAEA;;AAEA;AACA;AACA;AACA;AACA;AACA,GAAG;AACH;AAAA;AAAA;;AAEA;AACA;AACA;AACA;AACA,GAAG;AACH;AACA;AAAA;AAAA;;;;;;;;;AChHA;AAAA;AACA;;AAEA,QAAQ,UAAU;AAClB;;AAEA;AACA;;AAEA,QAAQ,WAAW;AACnB;;AAEA,WAAW,eAAe;;AAOzB;;AAED;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA","file":"./bundle.js","sourcesContent":[" \t// The module cache\n \tvar installedModules = {};\n\n \t// The require function\n \tfunction __webpack_require__(moduleId) {\n\n \t\t// Check if module is in cache\n \t\tif(installedModules[moduleId])\n \t\t\treturn installedModules[moduleId].exports;\n\n \t\t// Create a new module (and put it into the cache)\n \t\tvar module = installedModules[moduleId] = {\n \t\t\ti: moduleId,\n \t\t\tl: false,\n \t\t\texports: {}\n \t\t};\n\n \t\t// Execute the module function\n \t\tmodules[moduleId].call(module.exports, module, module.exports, __webpack_require__);\n\n \t\t// Flag the module as loaded\n \t\tmodule.l = true;\n\n \t\t// Return the exports of the module\n \t\treturn module.exports;\n \t}\n\n\n \t// expose the modules object (__webpack_modules__)\n \t__webpack_require__.m = modules;\n\n \t// expose the module cache\n \t__webpack_require__.c = installedModules;\n\n \t// identity function for calling harmony imports with the correct context\n \t__webpack_require__.i = function(value) { return value; };\n\n \t// define getter function for harmony exports\n \t__webpack_require__.d = function(exports, name, getter) {\n \t\tif(!__webpack_require__.o(exports, name)) {\n \t\t\tObject.defineProperty(exports, name, {\n \t\t\t\tconfigurable: false,\n \t\t\t\tenumerable: true,\n \t\t\t\tget: getter\n \t\t\t});\n \t\t}\n \t};\n\n \t// getDefaultExport function for compatibility with non-harmony modules\n \t__webpack_require__.n = function(module) {\n \t\tvar getter = module && module.__esModule ?\n \t\t\tfunction getDefault() { return module['default']; } :\n \t\t\tfunction getModuleExports() { return module; };\n \t\t__webpack_require__.d(getter, 'a', getter);\n \t\treturn getter;\n \t};\n\n \t// Object.prototype.hasOwnProperty.call\n \t__webpack_require__.o = function(object, property) { return Object.prototype.hasOwnProperty.call(object, property); };\n\n \t// __webpack_public_path__\n \t__webpack_require__.p = \"\";\n\n \t// Load entry module and return exports\n \treturn __webpack_require__(__webpack_require__.s = 1);\n\n\n\n// WEBPACK FOOTER //\n// webpack/bootstrap cf27e352617326df50fa","/*********\nExport an object that contains multiple functions\n\nconst scratch = {\n  fn1: function(){},\n  fn2: function(){}\n};\n\nexport { scratch };\n**********/\n\n/*********\nExport multiple functions all at once\n\nconst fn1 = function(){};\nconst fn2 = function(){};\n\nexport { fn1, fn2 };\n**********/\n\n/*********\nExport functions as you write them\n\nexport const fn1 = function(){};\nexport const fn2 = function(){};\n**********/\n\nexport const numberOfIslandsBF = array => {\n  let islandCounter = 0;\n  // Iterate through each cell of the 2D array\n  // Iterate through each row\n  for (let row = 0; row < array.length; row++) {\n    // Iterate through each column\n    for (let col = 0; col < array[0].length; col++) {\n      if (array[row][col] === \"1\") {\n        islandCounter += 1;\n      }\n      // Declare a queue to do BFS\n      let queue = [];\n      // Set the pos to be the first element in the queue\n      queue[0] = [row, col];\n      // Iterate through the queue until it is empty\n      while (queue.length > 0) {\n        // Shift off the queue and set to current\n        let [x, y] = queue.shift();\n        let current = array[x][y];\n        // If current is === to 1, then...\n        if (current === \"1\") {\n          // Toggle to 0\n          array[x][y] = \"0\";\n          // Find the surrounding cells and push to the back of the queue\n          queue = queue.concat(surroundingCells(array, [x, y]));\n        }\n      }\n    }\n  }\n  return islandCounter;\n};\n\nexport const numberOfIslandsDF = array => {\n  let islandCounter = 0;\n  // Iterate through each cell of the 2D array\n  // Iterate through each row\n  for (let row = 0; row < array.length; row++) {\n    // Iterate through each column\n    for (let col = 0; col < array[0].length; col++) {\n      // if (array[row][col] === 1) {\n      //   explore(array, [row, col]);\n      //   islandCounter += 1;\n      // }\n      islandCounter += explore(array, [row, col]);\n    }\n  }\n  return islandCounter;\n};\n\nexport const explore = (array, pos) => {\n  let [x, y] = pos;\n  if (array[x][y] === 1) {\n    array[x][y] = 0;\n    let neighbors = surroundingCells(array, pos);\n    neighbors.forEach(cell => {\n      explore(array, cell);\n    });\n    return 1;\n  } else {\n    return 0;\n  }\n};\n\nexport const surroundingCells = (array, pos) => {\n  let rowSize = array.length;\n  let colSize = array[0].length;\n\n  let [x, y] = pos;\n\n  let neighbors = [[x - 1, y + 0], [x + 0, y + 1], [x + 1, y - 0]];\n\n  return neighbors.filter(cell => {\n    let [row, col] = cell;\n    if (row >= 0 && row < rowSize && col >= 0 && col < colSize) {\n      return true;\n    }\n  });\n};\n\nexport const turnIntoA2DArray = array => {\n  let result = [];\n  array.forEach(row => {\n    result.push(row.split(\"\"));\n  });\n  return result;\n};\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./lib/numberOfIslands.js\n// module id = 0\n// module chunks = 0","/*********\nimport a single object from a file\n\nimport { scratch } from './scratch';\n*********/\n\n/*********\nimport a multiple objects from a file via object destructuring\n\nimport { fn0, fn2 } from './scratch';\n*********/\n\n// import { binarySearch } from './scratch';\n\nimport {\n  numberOfIslandsBF,\n  numberOfIslandsDF,\n  surroundingCells,\n  turnIntoA2DArray,\n} from \"./numberOfIslands\";\n\n/*********\nSet global window so we can manipulate in the browser\n\nwindow.scratch = scratch;\n*********/\n\nwindow.grid = [\n  [1, 1, 1, 1, 0],\n  [1, 1, 0, 1, 0],\n  [0, 0, 0, 0, 0],\n  [0, 1, 0, 1, 1],\n];\n\nwindow.turnIntoA2DArray = turnIntoA2DArray;\nwindow.arrStrings = [\"11110\", \"11010\", \"11000\", \"00000\"];\nwindow.surroundingCells = surroundingCells;\nwindow.numberOfIslandsBF = numberOfIslandsBF;\nwindow.numberOfIslandsDF = numberOfIslandsDF;\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./lib/root.js\n// module id = 1\n// module chunks = 0"],"sourceRoot":""}